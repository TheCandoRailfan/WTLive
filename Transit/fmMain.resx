<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timAutoGet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 7</value>
  </metadata>
  <metadata name="timCheckStat.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>131, 7</value>
  </metadata>
  <metadata name="timGoBtn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>256, 7</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>44</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAICAQAAEABADoAgAARgAAABAQEAABAAQAKAEAAC4DAAAgIAAAAQAIAKgIAABWBAAAEBAAAAEA
        CABoBQAA/gwAACgAAAAgAAAAQAAAAAEABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACA
        AAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkLkLkLkAAAAAAAAAAAAAALkLkLkLkAAAAAAAAA
        AAAAALkLkLkLkAAAAAAAAAAAAAALkLkLkLmbm5AAAAAAAAAAALkLkLkJubmwAAAAAAAAAAALkLkLkJub
        kAAAAAAAAAAAALkLkLm5ubAAAAAAAAAAAAALkJubm5uQAAAAAAAAAAAAALm5ubm5sAAAAAAAAAAAAACb
        m5ubm5ubmwAAAAAAAAAAubm5ubm5ubkAAAAAAAAAAJubm5ubm5ubAAAAAAAAAAC5ubm5ubm5uQAAAAAA
        AAAAm5ubm5ubm5sAAAAAAAAAAAAAALkLkLkLkAAAAAAAAAAAAAALkLkLkLkAAAAAAAAAAAAAALkLkLkL
        kAAAAAAAAAAAAAALkLkLkLkAAAAAAAAAAAAAALkLkLkLkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////////////AAf//wAD//8AAf//AAAH/4AA
        A//AAAH/4AAB//AAAf/4AAH//AAAP/4AAB//AAAP/wAAD/8AAA//AAAP/wAAD/+AAAf/wAAD//4AAf//
        AAD//4AA///AAP//4AD//////////////////////////ygAAAAQAAAAIAAAAAEABAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAsLAAAAAAAAsLCwAAAAAAALCwsAAAAAAACw
        sLm5AAAAAAsLC5sAAAAAALC5uQAAAAAAm5ubm5AAAAC5ubm5sAAAAJubm5uQAAAAAACwsLAAAAAAAAsL
        CwAAAAAAALCwsAAAAAAACwsLAAAAAAAAAAD//////////wf///8D////AD///4Af///AH///4Af//+AD
        ///gA///4AP///AD////Af///4D////A////////KAAAACAAAABAAAAAAQAIAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAwNzAAPDKpgAAAD4AAABdAAAA
        fAAAAJsAAAC6AAAA2QAAAPAAJCT/AEhI/wBsbP8AkJD/ALS0/wAAFD4AAB5dAAAofAAAMpsAADy6AABG
        2QAAVfAAJG3/AEiF/wBsnf8AkLX/ALTN/wAAKj4AAD9dAABUfAAAaZsAAH66AACT2QAAqvAAJLb/AEjC
        /wBszv8AkNr/ALTm/wAAPj4AAF1dAAB8fAAAm5sAALq6AADZ2QAA8PAAJP//AEj//wBs//8AkP//ALT/
        /wAAPioAAF0/AAB8VAAAm2kAALp+AADZkwAA8KoAJP+2AEj/wgBs/84AkP/aALT/5gAAPhQAAF0eAAB8
        KAAAmzIAALo8AADZRgAA8FUAJP9tAEj/hQBs/50AkP+1ALT/zQAAPgAAAF0AAAB8AAAAmwAAALoAAADZ
        AAAA8AAAJP8kAEj/SABs/2wAkP+QALT/tAAUPgAAHl0AACh8AAAymwAAPLoAAEbZAABV8AAAbf8kAIX/
        SACd/2wAtf+QAM3/tAAqPgAAP10AAFR8AABpmwAAfroAAJPZAACq8AAAtv8kAML/SADO/2wA2v+QAOb/
        tAA+PgAAXV0AAHx8AACbmwAAuroAANnZAADw8AAA//8kAP//SAD//2wA//+QAP//tAA+KgAAXT8AAHxU
        AACbaQAAun4AANmTAADwqgAA/7YkAP/CSAD/zmwA/9qQAP/mtAA+FAAAXR4AAHwoAACbMgAAujwAANlG
        AADwVQAA/20kAP+FSAD/nWwA/7WQAP/NtAA+AAAAXQAAAHwAAACbAAAAugAAANkAAADwAAAA/yQkAP9I
        SAD/bGwA/5CQAP+0tAA+ABQAXQAeAHwAKACbADIAugA8ANkARgDwAFUA/yRtAP9IhQD/bJ0A/5C1AP+0
        zQA+ACoAXQA/AHwAVACbAGkAugB+ANkAkwDwAKoA/yS2AP9IwgD/bM4A/5DaAP+05gA+AD4AXQBdAHwA
        fACbAJsAugC6ANkA2QDwAPAA/yT/AP9I/wD/bP8A/5D/AP+0/wAqAD4APwBdAFQAfABpAJsAfgC6AJMA
        2QCqAPAAtiT/AMJI/wDObP8A2pD/AOa0/wAUAD4AHgBdACgAfAAyAJsAPAC6AEYA2QBVAPAAbST/AIVI
        /wCdbP8AtZD/AM20/wAGBgYAEhISAB8fHwAsLCwAOTk5AEVFRQBSUlIAX19fAGxsbAB4eHgAhYWFAJKS
        kgCfn58Aq6urALi4uADFxcUA0tLSAN7e3gDr6+sA+Pj4APD7/wCkoKAAgICAAAAA/wAA/wAAAP//AP8A
        AAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4uLi4uLi
        4uLi4uLi4gAAAAAAAAAAAAAAAAAAAAAAAADp4uLi4uLi4uLi4uLi4gAAAAAAAAAAAAAAAAAAAAAAAOni
        KSjiKSjiKSjiKSji4gAAAAAAAAAAAAAAAAAAAAAAAOniKSjiKSjiKSjiKSji4uLi4uIAAAAAAAAAAAAA
        AAAAAOniKSjiKSjiKSjiKSji4uLi4uIAAAAAAAAAAAAAAAAAAOniKSjiKSjiKSjiKSknJycn4uIAAAAA
        AAAAAAAAAAAAAOniKSjiKSjiKSjiKSgoKCfi4gAAAAAAAAAAAAAAAAAAAOniKSjiKSjiKSjiKCgoJ+Li
        AAAAAAAAAAAAAAAAAAAAAOniKSjiKSjiKSkoKCgn4uLi4uIAAAAAAAAAAAAAAAAAAOniKSjiKSjiKSgo
        KCfi4uLi4uIAAAAAAAAAAAAAAAAAAOniKSfiKScoKCgoKCcnJycn4uIAAAAAAAAAAAAAAAAA6eIpKCgo
        KCgoKCgoKCgoKCfi4gAAAAAAAAAAAAAAAADp4iooKCgoKCgoKCgoKCgoJ+LiAAAAAAAAAAAAAAAAAOvi
        KigoKCgoKCgoKCgoKCgn4uIAAAAAAAAAAAAAAAAA6+IrKiopKSgoKSgoKSgoKSji4gAAAAAAAAAAAAAA
        AAAA6+Li4uLiKSjiKSjiKSjiKSji4gAAAAAAAAAAAAAAAAAA6+vp6eniKCjiKSjiKSjiKSji4gAAAAAA
        AAAAAAAAAAAAAAAAAOniKSjiKSjiKSjiKSji4gAAAAAAAAAAAAAAAAAAAAAAAOniKijiKijiKijiKiji
        4gAAAAAAAAAAAAAAAAAAAAAAAOniKijiKijiKijiKiji4gAAAAAAAAAAAAAAAAAAAAAAAOni4uLi4uLi
        4uLi4uLiAAAAAAAAAAAAAAAAAAAAAAAAAOvr6+np6enp6enp6ekAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////////8AB///AAP//wAB//+AAA//wAAH/+AA
        A//wAAP/+AAD//wAAH/+AAA//wAAH/8AAB//AAAf/wAAH/8AAB//gAAP/8AAB//+AAP//wAB//+AAP//
        wAD//+AA//////////////////////////8oAAAAEAAAACAAAAABAAgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwADA3MAA8MqmAAAAPgAAAF0AAAB8AAAA
        mwAAALoAAADZAAAA8AAkJP8ASEj/AGxs/wCQkP8AtLT/AAAUPgAAHl0AACh8AAAymwAAPLoAAEbZAABV
        8AAkbf8ASIX/AGyd/wCQtf8AtM3/AAAqPgAAP10AAFR8AABpmwAAfroAAJPZAACq8AAktv8ASML/AGzO
        /wCQ2v8AtOb/AAA+PgAAXV0AAHx8AACbmwAAuroAANnZAADw8AAk//8ASP//AGz//wCQ//8AtP//AAA+
        KgAAXT8AAHxUAACbaQAAun4AANmTAADwqgAk/7YASP/CAGz/zgCQ/9oAtP/mAAA+FAAAXR4AAHwoAACb
        MgAAujwAANlGAADwVQAk/20ASP+FAGz/nQCQ/7UAtP/NAAA+AAAAXQAAAHwAAACbAAAAugAAANkAAADw
        AAAk/yQASP9IAGz/bACQ/5AAtP+0ABQ+AAAeXQAAKHwAADKbAAA8ugAARtkAAFXwAABt/yQAhf9IAJ3/
        bAC1/5AAzf+0ACo+AAA/XQAAVHwAAGmbAAB+ugAAk9kAAKrwAAC2/yQAwv9IAM7/bADa/5AA5v+0AD4+
        AABdXQAAfHwAAJubAAC6ugAA2dkAAPDwAAD//yQA//9IAP//bAD//5AA//+0AD4qAABdPwAAfFQAAJtp
        AAC6fgAA2ZMAAPCqAAD/tiQA/8JIAP/ObAD/2pAA/+a0AD4UAABdHgAAfCgAAJsyAAC6PAAA2UYAAPBV
        AAD/bSQA/4VIAP+dbAD/tZAA/820AD4AAABdAAAAfAAAAJsAAAC6AAAA2QAAAPAAAAD/JCQA/0hIAP9s
        bAD/kJAA/7S0AD4AFABdAB4AfAAoAJsAMgC6ADwA2QBGAPAAVQD/JG0A/0iFAP9snQD/kLUA/7TNAD4A
        KgBdAD8AfABUAJsAaQC6AH4A2QCTAPAAqgD/JLYA/0jCAP9szgD/kNoA/7TmAD4APgBdAF0AfAB8AJsA
        mwC6ALoA2QDZAPAA8AD/JP8A/0j/AP9s/wD/kP8A/7T/ACoAPgA/AF0AVAB8AGkAmwB+ALoAkwDZAKoA
        8AC2JP8Awkj/AM5s/wDakP8A5rT/ABQAPgAeAF0AKAB8ADIAmwA8ALoARgDZAFUA8ABtJP8AhUj/AJ1s
        /wC1kP8AzbT/AAYGBgASEhIAHx8fACwsLAA5OTkARUVFAFJSUgBfX18AbGxsAHh4eACFhYUAkpKSAJ+f
        nwCrq6sAuLi4AMXFxQDS0tIA3t7eAOvr6wD4+PgA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A
        /wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4ijiKOIAAAAAAAAAAAAAACji
        KOIo4gAAAAAAAAAAAADiKOIo4iji4uLiAAAAAAAAAOIo4ijiKCgoKOIAAAAAAAAA4ijiKOIoKCjiAAAA
        AAAAAADiKOIoKCgo4uLiAAAAAAAA4igoKCgoKCgoKOIAAAAAAOIoKCgoKCgoKCjiAAAAAADiKCgoKCgo
        KCgo4gAAAAAAAOLi4uIo4ijiKOIAAAAAAAAAAAAA4ijiKOIo4gAAAAAAAAAAAADiKOIo4ijiAAAAAAAA
        AAAAAOIo4ijiKAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAAf/AAAD/wAAAD8AAIAfAADAHwAA4AcAAOAD
        AADgAwAA4AMAAPADAAD/AQAA/4AAAP/AAAD//wAA
</value>
  </data>
</root>